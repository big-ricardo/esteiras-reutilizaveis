name: "Build Azure Functions Package"
on:
  workflow_call:
    inputs:
      node-version:   
        type: string
        description: "Versão do Node.js"
        required: true
        default: "16.x"
      repo-path:
        type: string
        description: "Pasta onde se encontra o código fonte do Azure Function"
        required: false
        default: "."
      output-path:
        type: string
        description: "Nome do arquivo de saída"
        required: false
        default: "dist"
      artifact-name:
        type: string
        description: "Nome do artefato de saída"
        required: false
        default: "${{ github.event.repository.name }}-${{ github.run_id }}"

env:
  NODE_VERSION: ${{ inputs.node-version }}
  REPO_PATH: ${{ inputs.repo-path }}
  ARTIFACT_NAME: ${{ inputs.artifact-name }}

jobs:
  build-artifact:
    name: "Azure Functions Build"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: "Setup Node.js"
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: "Cache Node.js modules"
        uses: actions/cache@v3
        id: cache-primes
        with:
          path: node_modules
          key: ${{ github.event.repository.name }}-${{ runner.os }}-npm-${{ env.NODE_VERSION}}-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ github.event.repository.name }}-${{ runner.os }}-npm-${{ env.NODE_VERSION}}-${{ hashFiles('**/package.json') }}

      - name: "Download dependencies"
        if: steps.cache-primes.outputs.cache-hit != 'true'
        shell: bash
        run: |
          pushd './${{ env.REPO_PATH }}'
          yarn install
            
      - name: "Run Tests"
        shell: bash
        run: |
          pushd './${{ env.REPO_PATH }}'
          yarn test

      - name: "Run Build"
        shell: bash
        run: |
          pushd './${{ env.REPO_PATH }}'
          yarn build

      - name: "Remove dev dependencies"
        env:
          NODE_ENV: production
        shell: bash
        run: |
          pushd './${{ env.REPO_PATH }}'
          yarn install --production
    
      - name: "Zip build artifact"
        shell: bash
        run: |
            pushd './${{ env.REPO_PATH }}'
            zip -r ${{env.ARTIFACT_NAME}}.zip *
  
      - name: "Upload Artifact of Function App"
        uses: actions/upload-artifact@v3
        with:
          name: ${{env.ARTIFACT_NAME}}
          path: ${{ env.REPO_PATH }}/${{env.ARTIFACT_NAME}}.zip
          if-no-files-found: error

      - name: "Download dependencies to cache"
        if: steps.cache-primes.outputs.cache-hit != 'true'
        shell: bash
        run: |
          pushd './${{ env.REPO_PATH }}'
          yarn install